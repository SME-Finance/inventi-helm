1. Get the application URL by running these commands:
{{- if .Values.ingress.hostname }}
  http://{{- .Values.ingress.hostname }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get svc -w {{ template "fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo http://$SERVICE_IP:{{ .Values.service.externalPort }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ template "name" . }},release={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl port-forward $POD_NAME 8080:{{ .Values.service.externalPort }}
{{- end }}

  * Logs of first of deployed components:

  kubectl logs $(kubectl get pod -l release={{ .Release.Name }} -o jsonpath='{.items[0].metadata.name}')

{{- if eq .Values.service.name "http" }}
  * HTTP Access if kube-api is available on localhost:8001 (e.g., `kubectl proxy`)

  curl http://localhost:8001/api/v1/namespaces/{{ .Release.Namespace }}/services/{{ template "fullname" . }}:{{ .Values.service.name }}/proxy

  * Access first pod directly (requires sshuttle with internal cluster range forwarded)

  curl $(kubectl get pod -l release={{ .Release.Name }} -o jsonpath='{.items[0].status.podIP}'):{{ .Values.service.internalPort }}

  * Access pods via Kubernetes service (requires sshuttle with internal cluster range forwarded)

  curl $(kubectl get svc -l release={{ .Release.Name }} -o jsonpath='{.items[0].spec.clusterIP}'):{{ .Values.service.externalPort }}

{{- end }}
