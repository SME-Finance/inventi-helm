apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "fullname" . }}
spec:
  serviceName: {{ template "fullname" . }}
  replicas: {{ .Values.replicas }}
  podManagementPolicy: Parallel
  updateStrategy: {type: RollingUpdate}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        component: "{{ .Values.name }}"
        release: {{ .Release.Name }}
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
    spec:
      containers:
      - name: elasticsearch
        env:
        - name: DISCOVERY_SERVICE
          value: {{ template "fullname" . }}
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NUMBER_OF_MASTERS
          value: {{ .Values.quorumCount | quote}}
        - name: NODE_MASTER
          value: "true"
        - name: NODE_INGEST
          value: "true"
        - name: HTTP_ENABLE
          value: "true"
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}
              key: cluster-name
        - name: ES_JAVA_OPTS
          value: "-Djava.net.preferIPv4Stack=true -Xms{{ .Values.heapSize }} -Xmx{{ .Values.heapSize }}"
        securityContext:
          privileged: true
          capabilities:
            add:
              - IPC_LOCK
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ default "" .Values.image.pullPolicy | quote }}
        {{- if .Values.image.pullSecret }}
        imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
        {{- end }}
        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP
        resources:
{{ toYaml .Values.resources | indent 12 }}
        readinessProbe:
          httpGet:
            path: /_cluster/health?local=true
            port: 9200
          initialDelaySeconds: 5
        volumeMounts:
        - mountPath: /data/data
          name: data
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      - name: config
        configMap:
          name: {{ template "fullname" . }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ ReadWriteOnce ]
    {{- if .Values.storageClass }}
      storageClassName: "{{ .Values.storageClass }}"
    {{- end }}
      resources:
        requests:
          storage: "{{ .Values.storage }}"
